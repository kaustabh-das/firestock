{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d31bc78.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>FireStock</h1>\r\n      <h2>Your Pictures</h2>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCawFG-OXXv6luYbLj59q5fEtqIl8xEBag\",\r\n  authDomain: \"ninja-firestock.firebaseapp.com\",\r\n  projectId: \"ninja-firestock\",\r\n  storageBucket: \"ninja-firestock.appspot.com\",\r\n  messagingSenderId: \"244954917282\",\r\n  appId: \"1:244954917282:web:ca73ffe54faca3c7f02afb\",\r\n  measurementId: \"G-CW6K4SWN5E\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\n\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection(\"images\"); //The collecrion name in firestore is \"images\"\r\n\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        await collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { progress, url } = useStorage(file); // custom hooks\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar\"\r\n      initial={{ width: 0 }} // motion attribute\r\n      animate={{ width: progress + \"%\" }} // motion attribute\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const handleChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select an image file (png or jpg)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n    // this is a cleanup function that react will run when\r\n    // a component using the hook unmounts\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore(\"images\");\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            className=\"img-wrap\"\r\n            key={doc.id}\r\n            layout // motion attribute\r\n            whileHover={{ opacity: 1 }} // motion attribute\r\n            onClick={() => setSelectedImg(doc.url)}\r\n          >\r\n            <motion.img\r\n              src={doc.url}\r\n              alt=\"uploaded pic\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Modal = ({ setSelectedImg, selectedImg }) => {\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains(\"backdrop\")) {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }} // motion attribute\r\n      animate={{ opacity: 1 }} // motion attribute\r\n    >\r\n      <motion.img\r\n        src={selectedImg}\r\n        alt=\"enlarged pic\"\r\n        initial={{ y: \"-100vh\" }} // motion attribute\r\n        animate={{ y: 0 }} // motion attribute\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\nimport Title from \"./comps/Title\";\nimport UploadForm from \"./comps/UploadForm\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport Modal from \"./comps/Modal\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}